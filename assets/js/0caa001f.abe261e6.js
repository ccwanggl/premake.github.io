"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4031],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var n=i(96540);const l={},s=n.createContext(l);function a(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},88909:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=i(74848),l=i(28453);const s={},a=void 0,o={id:"floatabi",title:"floatabi",description:"Specifies the floating point ABI to use.",source:"@site/docs/floatabi.md",sourceDirName:".",slug:"/floatabi",permalink:"/docs/floatabi",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/floatabi.md",tags:[],version:"current",lastUpdatedBy:"Sam Surtees",lastUpdatedAt:1664931353e3,frontMatter:{},sidebar:"docs",previous:{title:"flags",permalink:"/docs/flags"},next:{title:"floatingpoint",permalink:"/docs/floatingpoint"}},r={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:2},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3}];function d(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Specifies the floating point ABI to use."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:'floatabi ("value")\n'})}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"value"})," is one of:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"soft"}),": Compiler will generate library calls for floating-point operations."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"softfp"}),": Compiler will generate code using hardware floating-point instructions, but still uses the soft-float calling conventions."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"hard"}),": Compiler will generate floating-point instructions using FPU-specific calling conventions."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"applies-to",children:"Applies To"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"config"})," scope."]}),"\n",(0,n.jsx)(t.h3,{id:"availability",children:"Availability"}),"\n",(0,n.jsx)(t.p,{children:"Premake 5.0.0 alpha 14 or later."}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:'floatabi "soft"\n'})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);