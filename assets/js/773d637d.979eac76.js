"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[996],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>i});var o=s(96540);const r={},a=o.createContext(r);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(a.Provider,{value:n},e.children)}},94621:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=s(74848),r=s(28453);const a={title:"Removing Values"},t=void 0,i={id:"Removing-Values",title:"Removing Values",description:"The remove...() set of functions remove one or more values from a list of configuration values. Every configuration list in the Premake API has a corresponding remove function: flags() has removeflags(), defines() has removedefines(), and so on.",source:"@site/docs/Removing-Values.md",sourceDirName:".",slug:"/Removing-Values",permalink:"/docs/Removing-Values",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Removing-Values.md",tags:[],version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1622582682e3,frontMatter:{title:"Removing Values"}},l={},c=[{value:"Applies To",id:"applies-to",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The remove...() set of functions remove one or more values from a list of configuration values. Every configuration list in the Premake API has a corresponding remove function: ",(0,o.jsx)(n.a,{href:"/docs/flags",children:"flags()"})," has removeflags(), ",(0,o.jsx)(n.a,{href:"/docs/defines",children:"defines()"})," has removedefines(), and so on."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'remove... { "values_to_remove" }\n'})}),"\n",(0,o.jsx)(n.h2,{id:"applies-to",children:"Applies To"}),"\n",(0,o.jsx)(n.p,{children:"Project configurations."}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsx)(n.p,{children:"One or more values to remove. If multiple values are specified, use the Lua table syntax."}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.p,{children:"Remove the NoExceptions flag from a previous configuration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'removeflags "NoExceptions"\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can use wildcards in removes. This example will remove both WIN32 and WIN64 from the defines."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'defines { "WIN32", "WIN64", "LINUX", "MACOSX" }\nremovedefines "WIN*"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);