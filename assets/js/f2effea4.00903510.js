"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6854],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(96540);const r={},s=i.createContext(r);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:t},e.children)}},98989:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=n(74848),r=n(28453);const s={title:"Locating Scripts"},c=void 0,o={id:"Locating-Scripts",title:"Locating Scripts",description:"When Premake needs to load a script file, via a call to dofile() or include(), or a module via a call to require(), it uses the premake.path variable to locate it. This is a semicolon-delimited string which, by default, includes the following locations, in the specified order:",source:"@site/docs/Locating-Scripts.md",sourceDirName:".",slug:"/Locating-Scripts",permalink:"/docs/Locating-Scripts",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Locating-Scripts.md",tags:[],version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1622582682e3,frontMatter:{title:"Locating Scripts"}},l={},a=[];function d(e){const t={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["When Premake needs to load a script file, via a call to ",(0,i.jsx)(t.code,{children:"dofile()"})," or ",(0,i.jsx)(t.code,{children:"include()"}),", or a module via a call to ",(0,i.jsx)(t.code,{children:"require()"}),", it uses the ",(0,i.jsx)(t.code,{children:"premake.path"})," variable to locate it. This is a semicolon-delimited string which, by default, includes the following locations, in the specified order:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Relative to the currently executing script"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["On the path specified by the ",(0,i.jsx)(t.code,{children:"--scripts"})," command line argument"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["On the paths listed in the ",(0,i.jsx)(t.code,{children:"PREMAKE_PATH"})," environment variable"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"~/.premake"})," directory"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"~/Library/Application Support/Premake"})," directory (Mac OS X only)"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"/usr/local/share/premake"})," directory"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In the ",(0,i.jsx)(t.code,{children:"/usr/share/premake"})," directory"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"In the directory containing the currently running Premake executable."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note that these search paths also work for modules (e.g. ",(0,i.jsx)(t.code,{children:"~/.premake/monodevelop"}),") and ",(0,i.jsx)(t.a,{href:"/docs/System-Scripts",children:"system scripts"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["You are free to add or remove paths from ",(0,i.jsx)(t.code,{children:"premake.path"}),", in either your project or system scripts. Any requests to load scripts after the change will use your modified path."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);