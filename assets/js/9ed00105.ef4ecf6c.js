"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3873],{22163:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=s(74848),r=s(28453);const t={},l=void 0,o={id:"configuration",title:"configuration",description:"This function has been deprecated in Premake 5.0 beta1. Use the new filter() function instead; you will get more granular matching and much better performance. configuration() will be not supported in Premake 6.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/configuration.md",tags:[],version:"current",lastUpdatedBy:"Thomas Hope",lastUpdatedAt:1663530177e3,frontMatter:{},sidebar:"docs",previous:{title:"configmap",permalink:"/docs/configmap"},next:{title:"configurations",permalink:"/docs/configurations"}},a={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3},{value:"Availability",id:"availability",level:3},{value:"See Also",id:"see-also",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"This function has been deprecated in Premake 5.0 beta1."})," Use the new ",(0,i.jsx)(n.a,{href:"/docs/filter",children:"filter()"})," function instead; you will get more granular matching and much better performance. ",(0,i.jsx)(n.code,{children:"configuration()"})," will be not supported in Premake 6."]})}),"\n",(0,i.jsx)(n.p,{children:"Limits the subsequent build settings to a particular environment."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration { "keywords" }\n'})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"keywords"})," is a list of identifiers (see below). When all of the keywords in this list match Premake's current context, the settings that follow the ",(0,i.jsx)(n.code,{children:"configuration"})," statement will be applied. If any of the identifiers are not in the current context the settings will be ignored."]}),"\n",(0,i.jsx)(n.p,{children:"The available sources for keywords. Keywords are not case-sensitive."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Configuration names."})," Any of the configuration names supplied to the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/configurations",children:"configurations"})})," or ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/platforms",children:"platforms"})})," functions."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Action names"})," such as ",(0,i.jsx)(n.strong,{children:"vs2010"})," or ",(0,i.jsx)(n.strong,{children:"gmake"}),". See the ",(0,i.jsx)(n.a,{href:"/docs/Using-Premake",children:"Using Premake"})," for a complete list."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Command line options"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"System names"})," such as ",(0,i.jsx)(n.strong,{children:"windows"}),", ",(0,i.jsx)(n.strong,{children:"macosx"}),", or ",(0,i.jsx)(n.strong,{children:"xbox360"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Architectures"})," such as ",(0,i.jsx)(n.strong,{children:"x32"})," or ",(0,i.jsx)(n.strong,{children:"x64"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Toolsets"})," such as ",(0,i.jsx)(n.strong,{children:"gcc"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Target kinds"})," like ",(0,i.jsx)(n.strong,{children:"ConsoleApp"})," or ",(0,i.jsx)(n.strong,{children:"SharedLib"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Languages"})," like ",(0,i.jsx)(n.strong,{children:"C++"})," or ",(0,i.jsx)(n.strong,{children:"C#"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"File names"})," can be used to apply settings to a specific set of source code files; this feature is currently very limited."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to the terms listed above, you may use the ",(0,i.jsx)(n.strong,{children:"*"})," and ",(0,i.jsx)(n.strong,{children:"**"})," wildcards to match more than one term or file. You may also use the modifiers ",(0,i.jsx)(n.strong,{children:"not"})," and ",(0,i.jsx)(n.strong,{children:"or"})," to build more complex conditions. See the examples below for more information."]}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.p,{children:'Define a new symbol which applies only to debug builds; assumes a configuration named "Debug" was defined as part of the workspace.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "Debug"\n  defines { "_DEBUG" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Define a symbol only when targeting Visual Studio 2010."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "vs2010"\n  defines { "VISUAL_STUDIO_2005" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Wildcards can be used to match multiple terms. Define a symbol for all versions of Visual Studio."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "vs*"\n  defines { "VISUAL_STUDIO" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Add a suffix to the debug versions of libraries."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration { "Debug", "SharedLib or StaticLib" }\n  targetsuffix "_d"\n\n-- ...or...\nconfiguration { "Debug", "*Lib" }\n  targetsuffix "_d"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Apply settings based on the presence of a ",(0,i.jsx)(n.a,{href:"/docs/Command-Line-Arguments",children:"custom command line option"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Using an option like --localized\nconfiguration { "localized" }\n   files { "src/localizations/**" }\n\n-- Using an option like --renderer=opengl\nconfiguration { "renderer=opengl" }\n   files { "src/opengl/**.cpp" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Although support is currently quite limited, you may also apply settings to a particular file or set of files. This example sets the build action for all PNG image files."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "*.png"\n  buildaction "Embed"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the case of files you may also use the ",(0,i.jsx)(n.strong,{children:"**"})," wildcard, which will recurse into subdirectories."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "**.png"\n  buildaction "Embed"\n'})}),"\n",(0,i.jsx)(n.p,{children:"If multiple keywords are specified, they will be treated as a logical AND. All terms must be present for the block to be applied. This example will apply the symbol only for debug builds on Mac OS X."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration { "debug", "macosx" }\n  defines { "DEBUG_MACOSX" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Multiple terms must use Lua's curly bracket list syntax."}),"\n",(0,i.jsxs)(n.p,{children:["You can use the ",(0,i.jsx)(n.strong,{children:"or"})," modifier to match against multiple, specific terms."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "linux or macosx"\n  defines { "LINUX_OR_MACOSX" }\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can also use ",(0,i.jsx)(n.strong,{children:"not"})," to apply the settings to all environments where the identifier is not set."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'configuration "not windows"\n  defines { "NOT_WINDOWS" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Finally, you can reset the configuration filter and remove all active keywords by passing the function an empty table."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"configuration {}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"availability",children:"Availability"}),"\n",(0,i.jsxs)(n.p,{children:["Premake 4.0 or later. Will be deprecated at some point in 5.x development in favor of ",(0,i.jsx)(n.a,{href:"/docs/filter",children:"filter()"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/Filters",children:"Filters"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/docs/filter",children:"filter"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);