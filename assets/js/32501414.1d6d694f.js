"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[8815],{28453:(e,i,r)=>{r.d(i,{R:()=>a,x:()=>t});var l=r(96540);const s={},n=l.createContext(s);function a(e){const i=l.useContext(n);return l.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(n.Provider,{value:i},e.children)}},86027:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>n,metadata:()=>t,toc:()=>d});var l=r(74848),s=r(28453);const n={},a=void 0,t={id:"ignoredefaultlibraries",title:"ignoredefaultlibraries",description:"Specifies the default libraries to be ignored for a project.",source:"@site/docs/ignoredefaultlibraries.md",sourceDirName:".",slug:"/ignoredefaultlibraries",permalink:"/docs/ignoredefaultlibraries",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/ignoredefaultlibraries.md",tags:[],version:"current",lastUpdatedBy:"Rsu",lastUpdatedAt:1690122355e3,frontMatter:{},sidebar:"docs",previous:{title:"icon",permalink:"/docs/icon"},next:{title:"imageoptions",permalink:"/docs/imageoptions"}},o={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:3},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3},{value:"See Also",id:"see-also",level:2}];function c(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.p,{children:"Specifies the default libraries to be ignored for a project."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lua",children:'ignoredefaultlibraries { "libraries" }\n'})}),"\n",(0,l.jsx)(i.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(i.p,{children:["'libraries' is a list of library names. If a valid extension isn't present, ",(0,l.jsx)(i.code,{children:".lib"})," will be automatically appended, similar to ",(0,l.jsx)(i.a,{href:"/docs/links",children:"links"}),". Currently, the valid extensions are ",(0,l.jsx)(i.code,{children:".lib"})," and ",(0,l.jsx)(i.code,{children:".obj"}),"."]}),"\n",(0,l.jsx)(i.h3,{id:"applies-to",children:"Applies To"}),"\n",(0,l.jsx)(i.p,{children:"Projects."}),"\n",(0,l.jsx)(i.h3,{id:"availability",children:"Availability"}),"\n",(0,l.jsx)(i.p,{children:"Premake 5.0 or later."}),"\n",(0,l.jsx)(i.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(i.p,{children:["Specify ",(0,l.jsx)(i.code,{children:"MSVCRT.lib"})," as a default library to ignore."]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lua",children:'project "MyProject"\n  ignoredefaultlibraries { "MSVCRT" }\n'})}),"\n",(0,l.jsx)(i.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docs/links",children:"links"})}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);