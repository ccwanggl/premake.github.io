"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5367],{90843:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=s(74848),r=s(28453);const i={title:"Tokens"},a=void 0,d={id:"Tokens",title:"Tokens",description:"Tokens provide the ability to substitute computed values into a configuration setting. Using tokens, you can specify a single value that automatically adjusts itself to different platforms and configurations.",source:"@site/docs/Tokens.md",sourceDirName:".",slug:"/Tokens",permalink:"/docs/Tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Tokens.md",tags:[],version:"current",lastUpdatedBy:"Nick Clark",lastUpdatedAt:1735408078e3,frontMatter:{title:"Tokens"}},l={},c=[{value:"Value Tokens",id:"value-tokens",level:2},{value:"Command Tokens",id:"command-tokens",level:2},{value:"Path in commands",id:"path-in-commands",level:3},{value:"Symbolic Links",id:"symbolic-links",level:3},{value:"Tokens and Filters",id:"tokens-and-filters",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Tokens provide the ability to substitute computed values into a configuration setting. Using tokens, you can specify a single value that automatically adjusts itself to different platforms and configurations."}),"\n",(0,t.jsxs)(n.p,{children:["Tokens come in two varieties: ",(0,t.jsx)(n.em,{children:"value tokens"}),", and ",(0,t.jsx)(n.em,{children:"command tokens"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"value-tokens",children:"Value Tokens"}),"\n",(0,t.jsxs)(n.p,{children:["Value tokens are expressions wrapped in a ",(0,t.jsx)(n.code,{children:"%{}"})," sequence. Tokens have access to one or more context objects, depending on their scope within the project: ",(0,t.jsx)(n.code,{children:"wks"}),", ",(0,t.jsx)(n.code,{children:"prj"}),", ",(0,t.jsx)(n.code,{children:"cfg"}),", and ",(0,t.jsx)(n.code,{children:"file"}),". You can access all of the fields of these context objects within the token."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"%{wks.name}\n%{prj.location}\n%{cfg.targetdir}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The contents of the %{} are run through ",(0,t.jsx)(n.code,{children:"loadstring()"})," and executed at token-replacement time, so more complex replacements can be used. You can access any global value."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:"%{wks.name:gsub(' ', '_')}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can use ",(0,t.jsx)(n.code,{children:"wks"}),", ",(0,t.jsx)(n.code,{children:"prj"}),", ",(0,t.jsx)(n.code,{children:"cfg"}),", and ",(0,t.jsx)(n.code,{children:"file"})," to represent the current workspace, project, configuration, and file configuration respectively. Note that these values must be in scope for the type of value you are trying to substitute or the object will be nil. You'll have to hunt around for the available fields until I have a chance to document them, but in general they follow the API names (includedirs, location, flags, etc.)."]}),"\n",(0,t.jsx)(n.p,{children:"Some known tokens (feel free to add more as you use them):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'wks.name\nwks.location -- (location where the workspace/solution is written, not the premake-wks.lua file)\n\nprj.name\nprj.location -- (location where the project is written, not the premake-prj.lua file)\nprj.language\nprj.group\n\ncfg.longname\ncfg.shortname\ncfg.kind\ncfg.architecture\ncfg.platform\ncfg.system\ncfg.buildcfg\ncfg.buildtarget -- (see [target], below)\ncfg.linktarget -- (see [target], below)\ncfg.objdir\n\nfile.path\nfile.abspath\nfile.relpath\nfile.directory\nfile.reldirectory\nfile.name\nfile.basename -- (file part without extension)\nfile.extension -- (including \'.\'; eg ".cpp")\nfile.ruleinputs -- (see custom rules)\n\n-- These values are available on build and link targets\n-- Replace [target] with one of "cfg.buildtarget" or "cfg.linktarget"\n--   Eg: %{cfg.buildtarget.abspath}\n[target].abspath\n[target].relpath\n[target].directory\n[target].name\n[target].basename -- (file part without extension)\n[target].extension -- (including \'.\'; eg ".cpp")\n[target].bundlename\n[target].bundlepath\n[target].prefix\n[target].suffix\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The paths are expanded relative to premake script, to obtain absolute paths, you have to add ",(0,t.jsx)(n.code,{children:"!"})," as in ",(0,t.jsx)(n.code,{children:"%{!file.path}"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"command-tokens",children:"Command Tokens"}),"\n",(0,t.jsx)(n.p,{children:"Command tokens represent a system level command in a shell-neutral way."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'postbuildcommands {\n\t"{COPYFILE} %[file1.txt] %[file2.txt]"\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can use command tokens anywhere you specify a command line, including:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/buildcommands",children:"buildcommands"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/cleancommands",children:"cleancommands"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/os/os.execute",children:"os.execute"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/os/os.executef",children:"os.executef"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/postbuildcommands",children:"postbuildcommands"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/prebuildcommands",children:"prebuildcommands"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/prelinkcommands",children:"prelinkcommands"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/rebuildcommands",children:"rebuildcommands"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Command tokens are replaced with an appropriate command for the target shell. For Windows, path separators in the commmand arguments are converted to backslashes."}),"\n",(0,t.jsx)(n.p,{children:"The available tokens, and their replacements:"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Token"}),(0,t.jsx)(n.th,{children:"DOS/cmd"}),(0,t.jsx)(n.th,{children:"Posix"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{CHDIR}"}),(0,t.jsx)(n.td,{children:"chdir {args}"}),(0,t.jsx)(n.td,{children:"cd {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{COPYFILE}"}),(0,t.jsx)(n.td,{children:"copy /B /Y {args}"}),(0,t.jsx)(n.td,{children:"cp -f {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{COPYDIR}"}),(0,t.jsx)(n.td,{children:"xcopy /Q /E /Y /I {args}"}),(0,t.jsx)(n.td,{children:"cp -rf {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{DELETE}"}),(0,t.jsx)(n.td,{children:"del {args}"}),(0,t.jsx)(n.td,{children:"rm -rf {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{ECHO}"}),(0,t.jsx)(n.td,{children:"echo {args}"}),(0,t.jsx)(n.td,{children:"echo {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{LINKDIR}"}),(0,t.jsx)(n.td,{children:"mklink /d {args}"}),(0,t.jsx)(n.td,{children:"ln -s {reversed args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{LINKFILE}"}),(0,t.jsx)(n.td,{children:"mklink {args}"}),(0,t.jsx)(n.td,{children:"ln -s {reversed args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{MKDIR}"}),(0,t.jsx)(n.td,{children:"IF NOT EXIST {args} (mkdir {args})"}),(0,t.jsx)(n.td,{children:"mkdir -p {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{MOVE}"}),(0,t.jsx)(n.td,{children:"move /Y {args}"}),(0,t.jsx)(n.td,{children:"mv -f {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{RMDIR}"}),(0,t.jsx)(n.td,{children:"rmdir /S /Q {args}"}),(0,t.jsx)(n.td,{children:"rm -rf {args}"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{TOUCH}"}),(0,t.jsx)(n.td,{children:"type nul >> {arg} && copy /b {arg}+,, {arg}"}),(0,t.jsx)(n.td,{children:"touch {args}"})]})]})]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"The following tokens are deprecated:"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Token"}),(0,t.jsx)(n.th,{children:"DOS"}),(0,t.jsx)(n.th,{children:"Posix"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"{COPY}"}),(0,t.jsx)(n.td,{children:"xcopy /Q /E /Y /I {args}"}),(0,t.jsx)(n.td,{children:"cp -rf {args}"}),(0,t.jsx)(n.td,{children:"Use {COPYDIR} or {COPYFILE} instead"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"path-in-commands",children:"Path in commands"}),"\n",(0,t.jsx)(n.p,{children:"Paths in Premake should be relative to premake script in which they appears."}),"\n",(0,t.jsxs)(n.p,{children:["When you specify a path inside a commands, you have to wrap path inside ",(0,t.jsx)(n.code,{children:"%[]"})," to allow correct transformation for the generator."]}),"\n",(0,t.jsx)(n.p,{children:"i.e."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'buildcommands {\n\t"{COPYFILE} %[%{!file.abspath}] %[%{!sln.location}/%{file.basename}]"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"symbolic-links",children:"Symbolic Links"}),"\n",(0,t.jsx)(n.p,{children:"For Windows, it is required to create symbolic links from an elevated context or to have Developer Mode enabled. The minimum required Windows version to execute symbolic links is Windows 10."}),"\n",(0,t.jsxs)(n.p,{children:["LINKDIR and LINKFILE follow Windows ",(0,t.jsx)(n.code,{children:"mklink"})," semantics, i.e. ",(0,t.jsx)(n.code,{children:"{LINKFILE} LINK TARGET"}),", instead of Posix semantics."]}),"\n",(0,t.jsx)(n.h2,{id:"tokens-and-filters",children:"Tokens and Filters"}),"\n",(0,t.jsxs)(n.p,{children:["Tokens are not expanded in filters. See ",(0,t.jsx)(n.a,{href:"https://github.com/premake/premake-core/issues/1036#issuecomment-379685035",children:"issue 1306"})," for some illustrative examples."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var t=s(96540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);