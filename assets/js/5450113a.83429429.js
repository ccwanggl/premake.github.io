"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2969],{17327:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var i=s(74848),l=s(28453);const n={},o=void 0,a={id:"symbolspath",title:"symbolspath",description:"Specify the target location of the debug symbols.",source:"@site/docs/symbolspath.md",sourceDirName:".",slug:"/symbolspath",permalink:"/docs/symbolspath",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/symbolspath.md",tags:[],version:"current",lastUpdatedBy:"Rsu",lastUpdatedAt:1690122355e3,frontMatter:{},sidebar:"docs",previous:{title:"symbols",permalink:"/docs/symbols"},next:{title:"sysincludedirs",permalink:"/docs/sysincludedirs"}},r={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:3},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3}];function d(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Specify the target location of the debug symbols.\nFor the Visual Studio action, this allows you to specify the location and name of the .pdb output."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:'symbolspath "filename"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Not specifying this option will result in the compilers default behavior."}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"filename"})," the target location of the symbols."]}),"\n",(0,i.jsx)(t.h3,{id:"applies-to",children:"Applies To"}),"\n",(0,i.jsx)(t.p,{children:"Project configurations."}),"\n",(0,i.jsx)(t.h3,{id:"availability",children:"Availability"}),"\n",(0,i.jsx)(t.p,{children:"Premake 5.0 or later."}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.p,{children:"This project while specific to Visual Studio shows how to output the .pdb file right next to the lib/exe/dll using the name of the lib/exe/dll itself."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:"project \"MyProject\"\n    symbolspath '$(OutDir)$(TargetName).pdb'\n"})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var i=s(96540);const l={},n=i.createContext(l);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);