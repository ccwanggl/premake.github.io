"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2975],{15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>y});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(a),d=n,y=c["".concat(p,".").concat(d)]||c[d]||h[d]||l;return a?r.createElement(y,i(i({ref:t},u),{},{components:a})):r.createElement(y,i({ref:t},u))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},26434:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=a(58168),n=(a(96540),a(15680));const l={},i=void 0,o={unversionedId:"vpaths",id:"vpaths",isDocsHomePage:!1,title:"vpaths",description:'Places files into groups or "virtual paths", rather than the default behavior of mirroring the filesystem in IDE-based projects. So you could, for instance, put all header files in a group called "Headers", no matter where they appeared in the source tree.',source:"@site/docs/vpaths.md",sourceDirName:".",slug:"/vpaths",permalink:"/docs/vpaths",editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/vpaths.md",tags:[],version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1615583424,formattedLastUpdatedAt:"3/12/2021",frontMatter:{},sidebar:"docs",previous:{title:"visibility",permalink:"/docs/visibility"},next:{title:"vsprops",permalink:"/docs/vsprops"}},p=[{value:"Parameters",id:"parameters",children:[],level:3},{value:"Applies To",id:"applies-to",children:[],level:3},{value:"Availability",id:"availability",children:[],level:3},{value:"Examples",id:"examples",children:[],level:3}],s={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,n.yg)(u,(0,r.A)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,'Places files into groups or "virtual paths", rather than the default behavior of mirroring the filesystem in IDE-based projects. So you could, for instance, put all header files in a group called "Headers", no matter where they appeared in the source tree.'),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths { ["group"] = "pattern(s)" }\n')),(0,n.yg)("p",null,"Note that Lua tables do not maintain any ordering between key-value pairs, so there is no precedence between the supplied rules. That is, you can't write a rule that rewrites the results of an earlier rule, since there is no guarantee in which order the rules will run."),(0,n.yg)("h3",{id:"parameters"},"Parameters"),(0,n.yg)("p",null,"A list of key/value pairs, specified with Lua's standard syntax, which map file patterns to the group in which they should appear. See the examples below for a more complete explanation."),(0,n.yg)("h3",{id:"applies-to"},"Applies To"),(0,n.yg)("p",null,"Project configurations. ",(0,n.yg)("a",{parentName:"p",href:"/docs/Feature-Matrix"},"Not all exporters currently support")," per-configuration file lists however."),(0,n.yg)("h3",{id:"availability"},"Availability"),(0,n.yg)("p",null,"Premake 4.4 or later."),(0,n.yg)("h3",{id:"examples"},"Examples"),(0,n.yg)("p",null,'Place all header files into a virtual path called "Headers". Any directory information is removed, so a path such as ',(0,n.yg)("inlineCode",{parentName:"p"},"src/lua/lua.h")," will appear in the IDE as ",(0,n.yg)("inlineCode",{parentName:"p"},"Headers/lua.h"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths { ["Headers"] = "**.h" }\n')),(0,n.yg)("p",null,"You may also specify multiple file patterns using the table syntax."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths {\n   ["Headers"] = { "**.h", "**.hxx", "**.hpp" }\n}\n')),(0,n.yg)("p",null,"It is also possible to include the file's path in the virtual group. Using the same example as above, this rule will appear in the IDE as ",(0,n.yg)("inlineCode",{parentName:"p"},"Headers/src/lua/lua.h"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths { ["Headers/*"] = "**.h" }\n')),(0,n.yg)("p",null,"Any directory information explicitly provided in the pattern will be removed from the replacement. This rule will appear in the IDE as ",(0,n.yg)("inlineCode",{parentName:"p"},"Headers/lua/lua.h"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths { ["Headers/*"] = "src/**.h" }\n')),(0,n.yg)("p",null,"You can also use virtual paths to remove extra directories from the IDE. For instance, this rule will cause the previous example to appear as ",(0,n.yg)("inlineCode",{parentName:"p"},"lua/lua.h"),", removing the ",(0,n.yg)("inlineCode",{parentName:"p"},"src")," part of the path from ",(0,n.yg)("em",{parentName:"p"},"all")," files."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths { ["*"] = "src" }\n')),(0,n.yg)("p",null,"And of course, you can specify more than one rule at a time."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-lua"},'vpaths {\n   ["Headers"] = "**.h",\n   ["Sources/*"] = {"**.c", "**.cpp"},\n   ["Docs"] = "**.txt"\n}\n')))}c.isMDXComponent=!0}}]);