"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6861],{3846:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=i(74848),t=i(28453);const r={},o=void 0,a={id:"systemversion",title:"systemversion",description:"Specifies the target operation system min and max versions.",source:"@site/docs/systemversion.md",sourceDirName:".",slug:"/systemversion",permalink:"/docs/systemversion",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/systemversion.md",tags:[],version:"current",lastUpdatedBy:"Scott Beca",lastUpdatedAt:1744526379e3,frontMatter:{},sidebar:"docs",previous:{title:"system",permalink:"/docs/system"},next:{title:"tags",permalink:"/docs/premake-tags"}},l={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:3},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3},{value:"Apple Targets",id:"apple-targets",level:3},{value:"Windows Targets",id:"windows-targets",level:3},{value:"See Also",id:"see-also",level:3}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Specifies the target operation system min and max versions."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:'systemversion ("value")\n'})}),"\n",(0,n.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"value"})," is a colon-delimited string specifying the min and max version, ",(0,n.jsx)(s.code,{children:"min:max"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Ranges are currently only supported by the Windows targets with the Visual Studio actions."}),"\n",(0,n.jsxs)(s.p,{children:["Otherwise, only a minimum version can be set for macOS/iOS/tvOS targets with ",(0,n.jsx)(s.code,{children:"xcode"})," and ",(0,n.jsx)(s.code,{children:"gmake"}),"-based actions."]}),"\n",(0,n.jsx)(s.h3,{id:"applies-to",children:"Applies To"}),"\n",(0,n.jsx)(s.p,{children:"Project."}),"\n",(0,n.jsx)(s.h3,{id:"availability",children:"Availability"}),"\n",(0,n.jsx)(s.p,{children:"Premake 5.0 or later."}),"\n",(0,n.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:'filter "system:windows"\n   systemversion "10.0.10240.0" -- To specify the version of the SDK you want\n'})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:'filter "system:windows"\n   systemversion "latest" -- To use the latest version of the SDK available\n'})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:'filter "system:windows"\n   systemversion "10.0.10240.0:latest" -- To specify a range of minumum and maximum versions\n'})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-lua",children:'filter "system:macosx"\n   systemversion "13.0" -- To target a minimum macOS deployment version of 13.0\n'})}),"\n",(0,n.jsx)(s.h3,{id:"apple-targets",children:"Apple Targets"}),"\n",(0,n.jsxs)(s.p,{children:["Under macOS this sets the minimum version of the operating system required for the app to run and is equivalent to setting the ",(0,n.jsx)(s.code,{children:"-mmacosx-version-min"})," (or newer ",(0,n.jsx)(s.code,{children:"-mmacos-version-min"}),") compiler flag."]}),"\n",(0,n.jsxs)(s.p,{children:["The same is true for iOS, iPadOS, and watchOS system targets except it is equivalent to setting the ",(0,n.jsx)(s.code,{children:"-miphoneos-version-min"})," (or newer ",(0,n.jsx)(s.code,{children:"-mios-version-min"}),") compiler flag."]}),"\n",(0,n.jsx)(s.admonition,{type:"warning",children:(0,n.jsxs)(s.p,{children:["There is also a ",(0,n.jsx)(s.code,{children:"-miphonesimulator-version-min"})," or ",(0,n.jsx)(s.code,{children:"-mios-simulator-version-min"})," compiler flag, but iOS simulator targets are not yet supported by Premake."]})}),"\n",(0,n.jsxs)(s.p,{children:["The same is also true for tvOS system targets except it is equivalent to setting the ",(0,n.jsx)(s.code,{children:"-mappletvos-version-min"})," (or newer ",(0,n.jsx)(s.code,{children:"-mtvos-version-min"}),") compiler flag."]}),"\n",(0,n.jsx)(s.admonition,{type:"warning",children:(0,n.jsxs)(s.p,{children:["There is also a ",(0,n.jsx)(s.code,{children:"-mappletvsimulator-version-min"})," or ",(0,n.jsx)(s.code,{children:"-mtvos-simulator-version-min"})," compiler flag, but tvOS simulator targets are not yet supported by Premake."]})}),"\n",(0,n.jsxs)(s.p,{children:["For the ",(0,n.jsx)(s.code,{children:"xcode"})," action this is equivalent to the ",(0,n.jsx)(s.code,{children:"MACOSX_DEPLOYMENT_TARGET"}),", ",(0,n.jsx)(s.code,{children:"IPHONEOS_DEPLOYMENT_TARGET"}),", or ",(0,n.jsx)(s.code,{children:"TVOS_DEPLOYMENT_TARGET"})," Xcode setting (depending on the target OS)."]}),"\n",(0,n.jsx)(s.h3,{id:"windows-targets",children:"Windows Targets"}),"\n",(0,n.jsxs)(s.p,{children:["Under Windows and Visual Studio actions, this is equivalent to setting the ",(0,n.jsx)(s.code,{children:"WindowsTargetPlatformVersion"})," (and ",(0,n.jsx)(s.code,{children:"WindowsTargetPlatformMinVersion"})," if targetting ",(0,n.jsx)(s.code,{children:"UWP"}),") MSBuild properties."]}),"\n",(0,n.jsx)(s.h3,{id:"see-also",children:"See Also"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/docs/system",children:"system"})}),"\n"]})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>a});var n=i(96540);const t={},r=n.createContext(t);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);