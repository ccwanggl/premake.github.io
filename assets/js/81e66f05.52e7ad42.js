"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[886],{28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>a});var l=n(96540);const r={},s=l.createContext(r);function t(e){const i=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:i},e.children)}},29280:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var l=n(74848),r=n(28453);const s={},t=void 0,a={id:"implibprefix",title:"implibprefix",description:"Specifies the import library file name prefix. Import libraries are generated for Windows DLL projects.",source:"@site/docs/implibprefix.md",sourceDirName:".",slug:"/implibprefix",permalink:"/docs/implibprefix",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/implibprefix.md",tags:[],version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1615583424e3,frontMatter:{},sidebar:"docs",previous:{title:"implibname",permalink:"/docs/implibname"},next:{title:"implibsuffix",permalink:"/docs/implibsuffix"}},o={},p=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:3},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3},{value:"See Also",id:"see-also",level:3}];function c(e){const i={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.p,{children:"Specifies the import library file name prefix. Import libraries are generated for Windows DLL projects."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lua",children:'implibprefix ("prefix")\n'})}),"\n",(0,l.jsxs)(i.p,{children:["By default, the system naming convention will be used: no prefix on Windows, a prefix of ",(0,l.jsx)(i.code,{children:"lib"})," (as in ",(0,l.jsx)(i.code,{children:"libMyProject.a"}),") on other systems. The ",(0,l.jsx)(i.code,{children:"implibprefix"})," function allows you to change this default."]}),"\n",(0,l.jsx)(i.h3,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"prefix"})," is the new file name prefix."]}),"\n",(0,l.jsx)(i.h3,{id:"applies-to",children:"Applies To"}),"\n",(0,l.jsx)(i.p,{children:"Project configurations."}),"\n",(0,l.jsx)(i.h3,{id:"availability",children:"Availability"}),"\n",(0,l.jsx)(i.p,{children:"Premake 4.0 or later."}),"\n",(0,l.jsx)(i.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lua",children:'implibprefix "plugin"\n'})}),"\n",(0,l.jsx)(i.p,{children:"The prefix may also be set to an empty string for no prefix."}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-lua",children:'implibprefix ""\n'})}),"\n",(0,l.jsx)(i.h3,{id:"see-also",children:"See Also"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docs/implibname",children:"implibname"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docs/implibdir",children:"implibdir"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docs/implibextension",children:"implibextension"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/docs/implibsuffix",children:"implibsuffix"})}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);