"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[2520],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(96540);const a={},o=i.createContext(a);function r(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},68616:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var i=n(74848),a=n(28453);const o={},r=void 0,s={id:"editorintegration",title:"editorintegration",description:"Turns the Editor Integration feature on. This is simply a hint to the action to add extra information into the generated workspace that allows an IDE to know which/where and how premake was executed. This is currently really only implemented for the Visual Studio action, but other actions may use this too in the future.",source:"@site/docs/editorintegration.md",sourceDirName:".",slug:"/editorintegration",permalink:"/docs/editorintegration",draft:!1,unlisted:!1,editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/editorintegration.md",tags:[],version:"current",lastUpdatedBy:"KyrietS",lastUpdatedAt:1615583424e3,frontMatter:{},sidebar:"docs",previous:{title:"editandcontinue",permalink:"/docs/editandcontinue"},next:{title:"embed",permalink:"/docs/embed"}},l={},d=[{value:"Parameters",id:"parameters",level:3},{value:"Applies To",id:"applies-to",level:3},{value:"Availability",id:"availability",level:3},{value:"Examples",id:"examples",level:3}];function c(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Turns the Editor Integration feature on. This is simply a hint to the action to add extra information into the generated workspace that allows an IDE to know which/where and how premake was executed. This is currently really only implemented for the Visual Studio action, but other actions may use this too in the future."}),"\n",(0,i.jsxs)(t.p,{children:["There is a plugin that allows re-execution of the premake step from within Visual Studio, which can be found here:\n",(0,i.jsx)(t.a,{href:"https://github.com/tvandijck/PremakeExtension",children:"https://github.com/tvandijck/PremakeExtension"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:'editorintegration "value"\n'})}),"\n",(0,i.jsx)(t.p,{children:'If no value is set for a configuration, the toolset\'s default setting (usually "Off") will be used.'}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"value"}),' is a boolean value, i.e. "On" or "Off".']}),"\n",(0,i.jsx)(t.h3,{id:"applies-to",children:"Applies To"}),"\n",(0,i.jsx)(t.p,{children:"Workspace configurations."}),"\n",(0,i.jsx)(t.h3,{id:"availability",children:"Availability"}),"\n",(0,i.jsx)(t.p,{children:"Premake 5.0 or later."}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:'-- Turn on IDE integration\neditorintegration "On"\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);