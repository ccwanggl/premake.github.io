(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{238:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var a=t(3),r=t(7),o=(t(0),t(441)),i={},c={unversionedId:"Starting-Your-New-Action",id:"Starting-Your-New-Action",isDocsHomePage:!1,title:"Starting-Your-New-Action",description:"When developing something as complex as a new exporter, it is a good idea to build it as a module. Doing so helps organize the code, provides a way to automate testing, and makes it easy to share your code with others.",source:"@site/docs/Starting-Your-New-Action.md",slug:"/Starting-Your-New-Action",permalink:"/docs/Starting-Your-New-Action",editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/Starting-Your-New-Action.md",version:"current",lastUpdatedBy:"starkos",lastUpdatedAt:1618324139},l=[{value:"Explain.",id:"explain",children:[]}],p={toc:l};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"When developing something as complex as a new exporter, it is a good idea to build it as a ",Object(o.b)("a",{parentName:"p",href:"developing-modules"},"module"),". Doing so helps organize the code, provides ",Object(o.b)("a",{parentName:"p",href:"adding-unit-tests"},"a way to automate testing"),", and makes it easy to ",Object(o.b)("a",{parentName:"p",href:"sharing-your-module"},"share your code with others"),"."),Object(o.b)("p",null,"So let's start by setting up a module containing a really simple action. Create a new file named ",Object(o.b)("inlineCode",{parentName:"p"},"lua.lua")," and place it into a folder named ",Object(o.b)("inlineCode",{parentName:"p"},"lua"),". Place this ",Object(o.b)("inlineCode",{parentName:"p"},"lua")," folder ",Object(o.b)("a",{parentName:"p",href:"locating-scripts"},"somewhere Premake can find it"),"."),Object(o.b)("p",null,"Copy this simple skeleton action definition into your ",Object(o.b)("inlineCode",{parentName:"p"},"lua.lua"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'-- lua/lua.lua\n\npremake.modules.lua = {}\nlocal m = premake.modules.lua\n\nlocal p = premake\n\nnewaction {\n    trigger = "lua",\n    description = "Export project information as Lua tables",\n\n    onStart = function()\n        print("Starting Lua generation")\n    end,\n\n    onWorkspace = function(wks)\n        printf("Generating Lua for workspace \'%s\'", wks.name)\n    end,\n\n    onProject = function(prj)\n        printf("Generating Lua for project \'%s\'", prj.name)\n    end,\n\n    execute = function()\n        print("Executing Lua action")\n    end,\n\n    onEnd = function()\n        print("Lua generation complete")\n    end\n}\n\nreturn m\n')),Object(o.b)("p",null,"I'll explain what all of that means in a moment, but first let's try it out and make sure everything is working. To see our new action in action, we'll need to require it into an existing project's ",Object(o.b)("inlineCode",{parentName:"p"},"premake5.lua")," script."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'require "lua"  -- add this to load your module\n\nworkspace "MyWorkspace"\n    configurations { "Debug", "Release" }\n\nproject "MyProject"\n    -- etc.\n')),Object(o.b)("p",null,"Then we can generate that project with our new ",Object(o.b)("inlineCode",{parentName:"p"},"lua")," action and see the ",Object(o.b)("inlineCode",{parentName:"p"},"print()")," functions get called."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"$ premake5 lua\nBuilding configurations...\nRunning action 'lua'...\nStarting Lua generation\nGenerating Lua for workspace 'MyWorkspace'\nGenerating Lua for project 'MyProject'\nExecuting Lua action\nLua generation complete\nDone.\n")),Object(o.b)("p",null,"(Quick side note: if you'd like to make this or any third-party module available without having to add a ",Object(o.b)("inlineCode",{parentName:"p"},"require()")," to every project script, just put that ",Object(o.b)("inlineCode",{parentName:"p"},'require("lua")')," call in your ",Object(o.b)("a",{parentName:"p",href:"system-scripts"},"system script")," instead.)"),Object(o.b)("h3",{id:"explain"},"Explain."),Object(o.b)("p",null,"We start out by creating a table to hold our module's interface. Since we'll be referencing this interface quite a lot in our code, we assign it to the shortcut ",Object(o.b)("inlineCode",{parentName:"p"},"m"),' for "module".'),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},"premake.modules.lua = {}\nlocal m = premake.modules.lua\n")),Object(o.b)("p",null,"We will also be calling functions from the ",Object(o.b)("inlineCode",{parentName:"p"},"premake")," namespace frequently, so we assign that to the shortcut ",Object(o.b)("inlineCode",{parentName:"p"},"p"),' for "premake".'),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},"local p = premake\n")),Object(o.b)("p",null,"Now we're ready to register our new action with Premake, using ",Object(o.b)("inlineCode",{parentName:"p"},"newaction()"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'newaction {\n    trigger = "lua",\n    description = "Export project information as Lua",\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"trigger")," is the token that should be typed on the Premake command line to cause our action to be triggered (i.e. ",Object(o.b)("inlineCode",{parentName:"p"},"premake5 lua"),")."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"description")," is the string which should appear in Premake's help text to describe what our action does. You can view this by running ",Object(o.b)("inlineCode",{parentName:"p"},"premake5 --help")," against the project script we modified above."),Object(o.b)("p",null,"Next, we register callbacks for Premake to use when it is time to export the project:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'onStart = function()\n    print("Starting Lua generation")\nend,\n\nonWorkspace = function(wks)\n    printf("Generating Lua for workspace \'%s\'", wks.name)\nend,\n\nonProject = function(prj)\n    printf("Generating Lua for project \'%s\'", prj.name)\nend,\n\nexecute = function()\n    print("Executing Lua action")\nend,\n\nonEnd = function()\n    print("Lua generation complete")\nend\n')),Object(o.b)("p",null,"All of these callbacks are optional; you only need to include the ones you are actually interested in receiving."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"onStart")," is called first to indicate that processing has begun."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"onWorkspace")," is called once for every workspace that was declared, via the ",Object(o.b)("a",{parentName:"p",href:"workspace"},Object(o.b)("inlineCode",{parentName:"a"},"workspace"))," function, in the user's project script."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"onProject")," is called once for every project that was declared, via the ",Object(o.b)("a",{parentName:"p",href:"project"},Object(o.b)("inlineCode",{parentName:"a"},"project"))," function, in the user's project script."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"execute")," is called after all projects and workspaces have been processed. This is a good place to put more general code that doesn't require a workspace or project as input, and should only run once."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"onEnd")," is called to indicate the processing is complete."),Object(o.b)("p",null,"Finally, we return our module's interface back to the caller (the ",Object(o.b)("inlineCode",{parentName:"p"},'require("lua")')," call in our project or system script)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},"return m\n")))}u.isMDXComponent=!0},441:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),u=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=u(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(t),d=a,m=s["".concat(i,".").concat(d)]||s[d]||b[d]||o;return t?r.a.createElement(m,c(c({ref:n},p),{},{components:t})):r.a.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);