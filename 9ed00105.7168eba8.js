(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{278:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(417)),i={},l={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"configuration",description:"Limits the subsequent build settings to a particular environment.",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/docs/configuration",editUrl:"https://github.com/premake/premake-core/edit/master/website/docs/configuration.md",version:"current",lastUpdatedBy:"starkos",lastUpdatedAt:1618068955,sidebar:"docs",previous:{title:"configmap",permalink:"/docs/configmap"},next:{title:"configurations",permalink:"/docs/configurations"}},c=[{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Availability",id:"availability",children:[]},{value:"See Also",id:"see-also",children:[]}],s={toc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Limits the subsequent build settings to a particular environment."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration { "keywords" }\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"This function will soon be deprecated and its use is discouraged.")," Use the new ",Object(o.b)("a",{parentName:"p",href:"/docs/filter"},"filter()")," function instead; you will get more granular matching and much better performance."),Object(o.b)("h3",{id:"parameters"},"Parameters"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"keywords")," is a list of identifiers (see below). When all of the keywords in this list match Premake's current context, the settings that follow the ",Object(o.b)("inlineCode",{parentName:"p"},"configuration")," statement will be applied. If any of the identifiers are not in the current context the settings will be ignored."),Object(o.b)("p",null,"The available sources for keywords. Keywords are not case-sensitive."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Configuration names.")," Any of the configuration names supplied to the ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"/docs/configurations"},"configurations"))," or ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"/docs/platforms"},"platforms"))," functions.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Action names")," such as ",Object(o.b)("strong",{parentName:"p"},"vs2010")," or ",Object(o.b)("strong",{parentName:"p"},"gmake"),". See the ",Object(o.b)("a",{parentName:"p",href:"/docs/Using-Premake"},"Using Premake")," for a complete list.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Command line options"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"System names")," such as ",Object(o.b)("strong",{parentName:"p"},"windows"),", ",Object(o.b)("strong",{parentName:"p"},"macosx"),", or ",Object(o.b)("strong",{parentName:"p"},"xbox360"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Architectures")," such as ",Object(o.b)("strong",{parentName:"p"},"x32")," or ",Object(o.b)("strong",{parentName:"p"},"x64"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Toolsets")," such as ",Object(o.b)("strong",{parentName:"p"},"gcc"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Target kinds")," like ",Object(o.b)("strong",{parentName:"p"},"ConsoleApp")," or ",Object(o.b)("strong",{parentName:"p"},"SharedLib"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Languages")," like ",Object(o.b)("strong",{parentName:"p"},"C++")," or ",Object(o.b)("strong",{parentName:"p"},"C#"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"File names")," can be used to apply settings to a specific set of source code files; this feature is currently very limited."))),Object(o.b)("p",null,"In addition to the terms listed above, you may use the ",Object(o.b)("strong",{parentName:"p"},"*")," and ",Object(o.b)("strong",{parentName:"p"},"*","*")," wildcards to match more than one term or file. You may also use the modifiers ",Object(o.b)("strong",{parentName:"p"},"not")," and ",Object(o.b)("strong",{parentName:"p"},"or")," to build more complex conditions. See the examples below for more information."),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("p",null,'Define a new symbol which applies only to debug builds; assumes a configuration named "Debug" was defined as part of the workspace.'),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "Debug"\n  defines { "_DEBUG" }\n')),Object(o.b)("p",null,"Define a symbol only when targeting Visual Studio 2010."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "vs2010"\n  defines { "VISUAL_STUDIO_2005" }\n')),Object(o.b)("p",null,"Wildcards can be used to match multiple terms. Define a symbol for all versions of Visual Studio."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "vs*"\n  defines { "VISUAL_STUDIO" }\n')),Object(o.b)("p",null,"Add a suffix to the debug versions of libraries."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration { "Debug", "SharedLib or StaticLib" }\n  targetsuffix "_d"\n\n-- ...or...\nconfiguration { "Debug", "*Lib" }\n  targetsuffix "_d"\n')),Object(o.b)("p",null,"Apply settings based on the presence of a ",Object(o.b)("a",{parentName:"p",href:"/docs/Command-Line-Arguments"},"custom command line option"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'-- Using an option like --localized\nconfiguration { "localized" }\n   files { "src/localizations/**" }\n\n-- Using an option like --renderer=opengl\nconfiguration { "renderer=opengl" }\n   files { "src/opengl/**.cpp" }\n')),Object(o.b)("p",null,"Although support is currently quite limited, you may also apply settings to a particular file or set of files. This example sets the build action for all PNG image files."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "*.png"\n  buildaction "Embed"\n')),Object(o.b)("p",null,"In the case of files you may also use the ",Object(o.b)("strong",{parentName:"p"},"*","*")," wildcard, which will recurse into subdirectories."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "**.png"\n  buildaction "Embed"\n')),Object(o.b)("p",null,"If multiple keywords are specified, they will be treated as a logical AND. All terms must be present for the block to be applied. This example will apply the symbol only for debug builds on Mac OS X."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration { "debug", "macosx" }\n  defines { "DEBUG_MACOSX" }\n')),Object(o.b)("p",null,"Multiple terms must use Lua's curly bracket list syntax."),Object(o.b)("p",null,"You can use the ",Object(o.b)("strong",{parentName:"p"},"or")," modifier to match against multiple, specific terms."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "linux or macosx"\n  defines { "LINUX_OR_MACOSX" }\n')),Object(o.b)("p",null,"You can also use ",Object(o.b)("strong",{parentName:"p"},"not")," to apply the settings to all environments where the identifier is not set."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},'configuration "not windows"\n  defines { "NOT_WINDOWS" }\n')),Object(o.b)("p",null,"Finally, you can reset the configuration filter and remove all active keywords by passing the function an empty table."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lua"},"configuration {}\n")),Object(o.b)("h3",{id:"availability"},"Availability"),Object(o.b)("p",null,"Premake 4.0 or later. Will be deprecated at some point in 5.x development in favor of ",Object(o.b)("a",{parentName:"p",href:"/docs/filter"},"filter()"),"."),Object(o.b)("h3",{id:"see-also"},"See Also"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/Filters"},"Filters")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/filter"},"filter"))))}b.isMDXComponent=!0},417:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,d=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return n?r.a.createElement(d,l(l({ref:t},s),{},{components:n})):r.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);